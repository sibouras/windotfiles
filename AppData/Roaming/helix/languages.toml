[[language]]
name = "html"
language-servers = [
  { name = 'emmet-lsp' },
  { name = 'vscode-html-language-server', except-features = ['format'] }
]
formatter = { command = "prettierd", args = ["--stdin-filepath", "a.html"] }
auto-format = false

[[language]]
name = "markdown"
formatter = { command = "prettierd", args = ["--stdin-filepath", "a.md"] }

[[language]]
name = "json"
language-servers = [
  { name = 'biome' },
  { name = 'vscode-json-language-server', except-features = ['format'] }
]
formatter = { command = "biome", args = ["format", "--stdin-file-path", "a.json"] }

[[language]]
name = "jsonc"
language-servers = [
  { name = 'biome' },
  { name = 'vscode-json-language-server', except-features = ['format'] }
]
formatter = { command = "biome", args = ["format", "--stdin-file-path", "a.jsonc"] }

[[language]]
name = "javascript"
language-servers = [
  { name = 'biome' },
  { name = 'typescript-language-server', except-features = ['format'] }
]
# auto-format = true
formatter = { command = "biome", args = ["format", "--stdin-file-path", "a.ts"] }

[[language]]
name = "typescript"
language-servers = [
  { name = 'biome' },
  { name = 'typescript-language-server', except-features = ['format'] }
]
# auto-format = true
formatter = { command = "biome", args = ["format", "--stdin-file-path", "a.ts"] }

[[language]]
name = "jsx"
language-servers = [
  { name = 'biome' },
  { name = 'typescript-language-server', except-features = ['format'] }
]
# auto-format = true
formatter = { command = "biome", args = ["format", "--stdin-file-path", "a.ts"] }

[[language]]
name = "tsx"
language-servers = [
  { name = 'biome' },
  { name = 'typescript-language-server', except-features = ['format'] }
]
# auto-format = true
formatter = { command = "biome", args = ["format", "--stdin-file-path", "a.ts"] }

[language-server.emmet-lsp]
command = "emmet-language-server"
args = ["--stdio"]

[language-server.rust-analyzer]
command = "rustup"
args = ["run", "stable", "rust-analyzer"]

[language-server.biome]
command = "biome"
args = ["lsp-proxy"]
required-root-patterns = ["biome.json", "biome.jsonc"]

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]
required-root-patterns = [".eslintrc*", "eslint.config.*"]

[language-server.eslint.config]
# format = true
nodePath = ""
onIgnoredFiles = "off"
# packageManager = "yarn"
quiet = false
rulesCustomizations = []
run = "onType"
useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
experimental = { }
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }
